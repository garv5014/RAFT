version: '3.8'

x-raftnode-base: &raftnode_base
    build:
        context: ./../../ 
        dockerfile: 'Raft_Node/Dockerfile'
    
x-raftnode-env: &raftnode_env
    TZ: America/Denver
    aspnetcore_environment: Development
    COLLECTORURL: 'http://otel_collector:4317'


services: 
    raftnode1:
        <<: *raftnode_base
        container_name: raftnode1
        environment: 
            <<: *raftnode_env
            node_id: 1
    raftnode2:
        <<: *raftnode_base
        container_name: raftnode2
        environment: 
            <<: *raftnode_env
            node_id: 2

    raftnode3:
        <<: *raftnode_base
        container_name: raftnode3
        environment: 
            <<: *raftnode_env
            node_id: 3
            
    nginx:
        image: nginx:latest
        container_name: reverse_proxy
        volumes:
          - ./nginx.conf:/etc/nginx/nginx.conf
        ports:
          - "5202:80"
        depends_on: 
          - raftnode1
          - raftnode2
          - raftnode3
    
    gateway: 
        container_name: gateway
        build:
            context: ./../../ 
            dockerfile: 'Raft_Gateway/Dockerfile'
        environment:
            TZ: America/Denver
            COLLECTORURL: 'http://otel_collector:4317'
            aspnetcore_environment: Development

    otel_collector:
        image: otel/opentelemetry-collector-contrib
        container_name: otel_collector
        command: ["--config=/etc/otelcol-contrib/config.yml", "${OTELCOL_ARGS}"]
        volumes:
          - ./otel-collector-config.yml:/etc/otelcol-contrib/config.yml
        ports:
          - 1888:1888 # pprof extension
          - 8888:8888 # Prometheus metrics exposed by the Collector
          - 8889:8889 # Prometheus exporter metrics
          - 13133:13133 # health_check extension
          - 4317:4317 # OTLP gRPC receiver
          - 4318:4318 # OTLP http receiver
          - 55679:55679 # zpages extension 

    zipkin:
        image: ghcr.io/openzipkin/zipkin-slim:${TAG:-latest}
        container_name: zipkin
        # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
        environment:
            - STORAGE_TYPE=mem
        ports:
            # Port used for the Zipkin UI and HTTP Api
            - 9411:9411

    prometheus:
        image: prom/prometheus
        container_name: prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
        ports:
            - 9090:9090
        restart: unless-stopped
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml

    grafana:
        image: grafana/grafana
        container_name: grafana
        ports:
            - 3000:3000
        restart: unless-stopped
        environment:
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=grafana
        volumes:
            - ./grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/default.yml
            - ./datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
            - ./dashboards:/var/lib/grafana/dashboards

    loki:
        image: grafana/loki:2.9.0
        command: -config.file=/etc/loki/local-config.yml
        container_name: loki
        volumes:
            - ./loki.yml:/etc/loki/local-config.yml
        ports:
            - "3100:3100"
